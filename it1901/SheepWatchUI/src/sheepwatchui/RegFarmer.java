package sheepwatchui;

import java.awt.Point;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.Point2D;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import models.EmergencyContact;
import models.Farmer;
import org.jdesktop.swingx.JXMapViewer;
import org.jdesktop.swingx.mapviewer.GeoPosition;
import org.jdesktop.swingx.mapviewer.Waypoint;
import org.jdesktop.swingx.mapviewer.WaypointPainter;

/**
 * Class containing a registration form for {@link Farmer} and {@link EmergencyContact}
 */
public class RegFarmer extends javax.swing.JFrame {

    private GeoPosition farmPos;
    /**
     * Creates new form RegFarmer
     */
    public RegFarmer() {
        initComponents();
        initMapKit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtEmail = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPostnr = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtEcName = new javax.swing.JTextField();
        txtEcEmail = new javax.swing.JTextField();
        txtEcPhone = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        mailLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        postnrLabel = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        contactNameLabel = new javax.swing.JLabel();
        contactMailLabel = new javax.swing.JLabel();
        contactPhoneLabel = new javax.swing.JLabel();
        contactInfoLabel = new javax.swing.JLabel();
        farmerInfoLabel = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labInfoRegister = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        txtPassword = new javax.swing.JPasswordField();
        txtPassword2 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        mapKitRegisterFarm = new org.jdesktop.swingx.JXMapKit();
        mapKitRegisterFarm.getMainMap().addMouseListener(new MouseListener() {
            public void mousePressed(MouseEvent e) {}
            public void mouseReleased(MouseEvent e) {}
            public void mouseEntered(MouseEvent e) {}
            public void mouseExited(MouseEvent e) {}

            public void mouseClicked(MouseEvent e) {
                // Getting main map
                JXMapViewer map = mapKitRegisterFarm.getMainMap();
                // Clearing the waypoints
                // map.setOverlayPainter(null);

                // Create a set of waypoints
                Set<Waypoint> waypoints = new HashSet<Waypoint>();
                // Convert to screen point
                Rectangle rect = map.getViewportBounds();
                // Getting the screen point clicked
                Point clickedPoint = new Point(e.getPoint().x + rect.x, e.getPoint().y + rect.y);
                Point2D p2d = clickedPoint;
                // Converting to GeoLocation
                farmPos = map.getTileFactory().pixelToGeo(p2d, map.getZoom());

                // Creating waypoint at location
                Waypoint wp = new SheepWaypoint(farmPos, 1);
                waypoints.add(wp);

                // Create a WaypointPainter to draw the points
                WaypointPainter painter = new WaypointPainter();
                SheepWaypointRenderer ren = new SheepWaypointRenderer();
                painter.setRenderer(ren);
                painter.setWaypoints(waypoints);
                map.setOverlayPainter(painter);
            }
        });
        jLabel3 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 700));

        txtEmail.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
        });

        txtAddress.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddressKeyPressed(evt);
            }
        });

        txtName.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });

        txtPostnr.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtPostnr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPostnrKeyPressed(evt);
            }
        });

        txtPhone.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhoneKeyPressed(evt);
            }
        });

        txtCity.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCityKeyPressed(evt);
            }
        });

        txtEcName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEcNameKeyPressed(evt);
            }
        });

        txtEcEmail.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtEcEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEcEmailKeyPressed(evt);
            }
        });

        txtEcPhone.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txtEcPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEcPhoneKeyPressed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        nameLabel.setText("Navn:");

        mailLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        mailLabel.setText("E-post");

        passLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        passLabel.setText("Passord:");

        addressLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        addressLabel.setText("Adresse:");

        phoneLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        phoneLabel.setText("Telefonnummer:");

        postnrLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        postnrLabel.setText("Postnummer:");

        cityLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        cityLabel.setText("Poststed:");

        contactNameLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        contactNameLabel.setText("Navn:");

        contactMailLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        contactMailLabel.setText("E-post:");

        contactPhoneLabel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        contactPhoneLabel.setText("Telefonnummer:");

        contactInfoLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        contactInfoLabel.setText("Nødkontakt:");

        farmerInfoLabel.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        farmerInfoLabel.setText("Vennligst fyll ut registreringsskjemaet. Alle felter må fylles ut.");

        btnConfirm.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnConfirm.setText("Bekreft registrering");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        jLabel1.setText("Bekreft passord:");

        txtPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswordKeyPressed(evt);
            }
        });

        txtPassword2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassword2KeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel2.setText("Bonde:");

        mapKitRegisterFarm.setDefaultProvider(org.jdesktop.swingx.JXMapKit.DefaultProviders.OpenStreetMaps);
        mapKitRegisterFarm.setMiniMapVisible(false);

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel3.setText("Marker din bondegård i kartet:");

        btnCancel.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        btnCancel.setText("Avbryt registrering");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contactInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(contactMailLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(contactNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(contactPhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEcEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEcName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEcPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(590, 590, 590))
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(farmerInfoLabel)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(addressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(passLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtPassword))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(mailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(cityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtCity))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(postnrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(phoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtPhone)
                                                .addComponent(txtPostnr)
                                                .addComponent(txtPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18)
                                .addComponent(mapKitRegisterFarm, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labInfoRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addGap(182, 182, 182)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(farmerInfoLabel)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mailLabel)
                            .addComponent(txtEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passLabel)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addressLabel)
                            .addComponent(txtAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPostnr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(postnrLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cityLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(66, 66, 66))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(mapKitRegisterFarm, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(contactInfoLabel)
                .addGap(3, 3, 3)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactNameLabel)
                    .addComponent(txtEcName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEcEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactMailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEcPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactPhoneLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnConfirm)
                        .addComponent(btnCancel))
                    .addComponent(labInfoRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        String name = "";
        String email = "";
        String password = "";
        String phone = "";
        String address = "";
        String postnr = "";
        String city = "";
        String ecName = "";
        String ecPhone = "";
        String ecEmail = "";

        boolean validForm = true;

        // Resets the info field
        labInfoRegister.setText("");

        /*
         * Checks that the user has written something in all the fields.
         * Writes an error message if one or more fields are empty.
        */
        try{
            name = txtName.getText();
            // Checks email
            if(ValidationHelper.checkEmail(txtEmail.getText())){
                email = txtEmail.getText();
            }else{
                labInfoRegister.setText("Bonde må ha en gyldig e-postadresse!");
                labInfoRegister.setForeground(java.awt.Color.RED);
                validForm = false;
            }
            // Checks if the passwords are equal
            if(txtPassword.getText().equals(txtPassword2.getText())){
                password = txtPassword.getText();
            }else{
                labInfoRegister.setText("Du må skrive to like passord!");
                labInfoRegister.setForeground(java.awt.Color.RED);
                validForm = false;
            }
            // Checks if the phone number is valid
            if(ValidationHelper.checkPhoneNumber(txtPhone.getText())){
                phone = txtPhone.getText();
            }else{
                labInfoRegister.setText("Bonde må ha et gyldig telefonnummer!");
                labInfoRegister.setForeground(java.awt.Color.RED);
                validForm = false;
            }
            address = txtAddress.getText();
            // Checks if the postnr is valid
            if(ValidationHelper.checkPostnr(txtPostnr.getText())){
                postnr = txtPostnr.getText();
            }else{
                labInfoRegister.setText("Bonde må ha gyldig postnummer!");
                labInfoRegister.setForeground(java.awt.Color.RED);
                validForm = false;
            }
            city = txtCity.getText();
            ecName = txtEcName.getText();
            // Checks if the email is valid
            if(ValidationHelper.checkEmail(txtEcEmail.getText())){
                ecEmail = txtEcEmail.getText();
            }else{
                labInfoRegister.setText("Nødkontakt må ha en gyldig e-postadresse!");
                labInfoRegister.setForeground(java.awt.Color.RED);
                validForm = false;
            }
            // Checks if the phone number is valid
            if(ValidationHelper.checkPhoneNumber(txtEcPhone.getText())){
                ecPhone = txtEcPhone.getText();
            }else{
                labInfoRegister.setText("Nødkontakt må ha gyldig telefonnr!");
                labInfoRegister.setForeground(java.awt.Color.RED);
                validForm = false;
            }
        }catch(NullPointerException npe){
            labInfoRegister.setText("Du må fylle ut alle feltene!");
            labInfoRegister.setForeground(java.awt.Color.RED);
            validForm = false;
        }
        // Checks if the user has actually written something in every field.
        if(txtName.getText().length()>0 && txtEmail.getText().length()>0
            && txtPassword.getText().length()>0 && txtPhone.getText().length()>0
            && txtAddress.getText().length()>0 && txtPostnr.getText().length()>0
            && txtCity.getText().length()>0 && txtEcName.getText().length()>0
            && txtEcEmail.getText().length()>0 && txtEcPhone.getText().length()>0
                && farmPos != null){
            if(validForm){
                // Creating the EmergencyContact object
                EmergencyContact ec = new EmergencyContact(ecName, ecEmail, ecPhone);
                // Creating the Farmer object
                Farmer farmer = new Farmer(name, email, phone, ec, address, 
                        postnr, city, farmPos, password);
                // Adding the farmer to the database
                DBConnector.addFarmerAndEC(farmer);
                JOptionPane.showMessageDialog(this, "Registrering vellykket!", 
                        "Varsel", JOptionPane.PLAIN_MESSAGE);
                // Enters MainPage as a logged in user
                new MainPage(farmer).setVisible(true);
                // Closes this window
                setVisible(false);
                dispose();
            }
        }else{
            labInfoRegister.setText("Du må fylle ut alle feltene!");
            labInfoRegister.setForeground(java.awt.Color.RED);
        }

    }//GEN-LAST:event_btnConfirmActionPerformed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtNameKeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtEmailKeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswordKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtPasswordKeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtPassword2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassword2KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtPassword2KeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtPhoneKeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtAddressKeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtPostnrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPostnrKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtPostnrKeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtCityKeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtEcNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEcNameKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtEcNameKeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtEcEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEcEmailKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtEcEmailKeyPressed
    /**
    * Activates the Confirmation button when the user presses Enter.
    * @param evt 
    */
    private void txtEcPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEcPhoneKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnConfirm.doClick();
        }
    }//GEN-LAST:event_txtEcPhoneKeyPressed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // Starting the RegFarmer frame
        new Login().setVisible(true);
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * Main method
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegFarmer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegFarmer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegFarmer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegFarmer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegFarmer().setVisible(true);
            }
        });
    }
    
    private void initMapKit(){
        mapKitRegisterFarm.setCenterPosition(new GeoPosition(59.741001, 9.939880));
        mapKitRegisterFarm.setZoom(10);
    }
    
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JLabel contactInfoLabel;
    private javax.swing.JLabel contactMailLabel;
    private javax.swing.JLabel contactNameLabel;
    private javax.swing.JLabel contactPhoneLabel;
    private javax.swing.JLabel farmerInfoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel labInfoRegister;
    private javax.swing.JLabel mailLabel;
    private org.jdesktop.swingx.JXMapKit mapKitRegisterFarm;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel passLabel;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JLabel postnrLabel;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtEcEmail;
    private javax.swing.JTextField txtEcName;
    private javax.swing.JTextField txtEcPhone;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPassword2;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPostnr;
    // End of variables declaration//GEN-END:variables
}
